


--- metadata.json	2017-12-05 11:48:48.669528612 +0000
+++ metadata.json.pdknew	2017-12-05 11:49:17.308437000 +0000
@@ -8,11 +8,15 @@
   "project_page": "https://github.com/puppetlabs/puppetlabs-motd",
   "issues_url": "https://tickets.puppetlabs.com/browse/MODULES",
   "dependencies": [
-    {"name":"puppetlabs/registry","version_requirement":">= 1.0.0 < 2.0.0"},
-    {"name":"puppetlabs/stdlib","version_requirement":">= 2.1.0 < 5.0.0"}
+    {
+      "name": "puppetlabs/registry",
+      "version_requirement": ">= 1.0.0 < 2.0.0"
+    },
+    {
+      "name": "puppetlabs/stdlib",
+      "version_requirement": ">= 2.1.0 < 5.0.0"
+    }
   ],
-  "data_provider": null,
-  "description": "This module simply manages /etc/motd or the Windows Logon Message as a template, showing interpolation of system attributes",
   "operatingsystem_support": [
     {
       "operatingsystem": "RedHat",
@@ -75,6 +79,9 @@
       "name": "puppet",
       "version_requirement": ">= 4.7.0 < 6.0.0"
     }
-  ]
+  ],
+  "description": "This module simply manages /etc/motd or the Windows Logon Message as a template, showing interpolation of system attributes",
+  "template-url": "file:///opt/puppetlabs/pdk/share/cache/pdk-module-template.git",
+  "template-ref": "heads/convert-0-gf513a64"
 }


--- appveyor.yml	2017-12-05 11:48:48.669041778 +0000
+++ appveyor.yml.pdknew	2017-12-05 11:49:17.309532000 +0000
@@ -3,51 +3,58 @@
   message: /^\(?doc\)?.*/
 clone_depth: 10
 init:
-- SET
-- 'mkdir C:\ProgramData\PuppetLabs\code && exit 0'
-- 'mkdir C:\ProgramData\PuppetLabs\facter && exit 0'
-- 'mkdir C:\ProgramData\PuppetLabs\hiera && exit 0'
-- 'mkdir C:\ProgramData\PuppetLabs\puppet\var && exit 0'
+  - SET
+  - 'mkdir C:\ProgramData\PuppetLabs\code && exit 0'
+  - 'mkdir C:\ProgramData\PuppetLabs\facter && exit 0'
+  - 'mkdir C:\ProgramData\PuppetLabs\hiera && exit 0'
+  - 'mkdir C:\ProgramData\PuppetLabs\puppet\var && exit 0'
 environment:
+  PUPPET_GEM_VERSION: ~> 4.0
   matrix:
-  - PUPPET_GEM_VERSION: ~> 4.0
-    RUBY_VER: 21
-  - PUPPET_GEM_VERSION: ~> 4.0
-    RUBY_VER: 21-x64
-  - PUPPET_GEM_VERSION: ~> 5.0
-    RUBY_VER: 24
-  - PUPPET_GEM_VERSION: ~> 5.0
-    RUBY_VER: 24-x64
-  - PUPPET_GEM_VERSION: 4.7.1
-    RUBY_VER: 21-x64
+    -
+      RUBY_VERSION: 24-x64
+      CHECK: syntax lint
+    -
+      RUBY_VERSION: 24-x64
+      CHECK: metadata_lint
+    -
+      RUBY_VERSION: 24-x64
+      CHECK: rubocop
+    -
+      RUBY_VERSION: 24-x64
+      CHECK: spec
+    -
+      RUBY_VERSION: 21-x64
+      CHECK: spec
 matrix:
   fast_finish: true
 install:
-- SET PATH=C:\Ruby%RUBY_VER%\bin;%PATH%
-- ps: |
-    # AppVeyor appears to have OpenSSL headers available already
-    # which msys2 would normally install with:
-    # pacman -S mingw-w64-x86_64-openssl --noconfirm
-    #
-    if ( $(ruby --version) -match "^ruby\s+2\.4" ) {
-      Write-Output "Building OpenSSL gem ~> 2.0.4 to fix Ruby 2.4 / AppVeyor issue"
-      gem install openssl --version '~> 2.0.4' --no-ri --no-rdoc
-    }
-
-    gem list openssl
-    ruby -ropenssl -e 'puts \"OpenSSL Version - #{OpenSSL::OPENSSL_VERSION}\"; puts \"OpenSSL Library Version - #{OpenSSL::OPENSSL_LIBRARY_VERSION}\"'
-- bundle install --jobs 4 --retry 2 --without system_tests
-- type Gemfile.lock
+  - set PATH=C:\Ruby%RUBY_VERSION%\bin;%PATH%
+  # Due to a bug in the version of OpenSSL shipped with Ruby 2.4.1 on Windows
+  # (https://bugs.ruby-lang.org/issues/11033). Errors are ignored because the
+  # mingw gem calls out to pacman to install OpenSSL which is already
+  # installed, causing gem to raise a warning that powershell determines to be
+  # a fatal error.
+  - ps: |
+      $ErrorActionPreference = "SilentlyContinue"
+      if($env:RUBY_VERSION -eq "24-x64") {
+        gem install openssl "~> 2.0.4" --no-rdoc --no-ri -- --with-openssl-dir=C:\msys64\mingw64
+      }
+      $host.SetShouldExit(0)
+  - bundle install --jobs 4 --retry 2 --without system_tests
+  - type Gemfile.lock
 build: off
 test_script:
-- bundle exec puppet -V
-- ruby -v
-- bundle exec rake spec SPEC_OPTS='--format documentation'
+  - bundle exec puppet -V
+  - ruby -v
+  - gem -v
+  - bundle -v
+  - bundle exec rake %CHECK%
 notifications:
-- provider: Email
-  to:
-  - nobody@nowhere.com
-  on_build_success: false
-  on_build_failure: false
-  on_build_status_changed: false
+  - provider: Email
+    to:
+      - nobody@nowhere.com
+    on_build_success: false
+    on_build_failure: false
+    on_build_status_changed: false


--- spec/spec_helper.rb	2017-12-05 11:48:48.671687741 +0000
+++ spec/spec_helper.rb.pdknew	2017-12-05 11:49:17.310299000 +0000
@@ -1,18 +1,24 @@
-# This file is generated by ModuleSync, do not edit.
 require 'puppetlabs_spec_helper/module_spec_helper'
+require 'rspec-puppet-facts'
+include RspecPuppetFacts
 
-if Puppet::Util::Package.versioncmp(Puppet.version, '4.5.0') >= 0
-  RSpec.configure do |c|
-    c.before :each do
-      Puppet.settings[:strict] = :error
-    end
-  end
+default_facts = {
+  puppetversion: Puppet.version,
+  facterversion: Facter.version,
+}
+
+default_facts_path = File.expand_path(File.join(File.dirname(__FILE__), 'default_facts.yml'))
+default_module_facts_path = File.expand_path(File.join(File.dirname(__FILE__), 'default_module_facts.yml'))
+
+if File.exist?(default_facts_path) && File.readable?(default_facts_path)
+  default_facts.merge!(YAML.safe_load(File.read(default_facts_path)))
 end
 
-# put local configuration and setup into spec_helper_local
-begin
-  require 'spec_helper_local'
-rescue LoadError => loaderror
-  puts "Could not require spec_helper_local: #{loaderror.message}"
+if File.exist?(default_module_facts_path) && File.readable?(default_module_facts_path)
+  default_facts.merge!(YAML.safe_load(File.read(default_module_facts_path)))
+end
+
+RSpec.configure do |c|
+  c.default_facts = default_facts
 end


--- .rubocop.yml	2017-12-05 11:48:48.667136337 +0000
+++ .rubocop.yml.pdknew	2017-12-05 11:49:17.311551000 +0000
@@ -1,6 +1,5 @@
 ---
-require:
- - rubocop-rspec
+require: rubocop-rspec
 AllCops:
   TargetRubyVersion: '2.1'
   Include:
@@ -13,7 +12,6 @@
   - pkg/**/*
   - spec/fixtures/**/*
   - vendor/**/*
-inherit_from: .rubocop_todo.yml
 Metrics/LineLength:
   Description: People have wide screens, use them.
   Max: 200
@@ -64,6 +62,8 @@
 Style/SymbolArray:
   Description: Using percent style obscures symbolic intent of array's contents.
   EnforcedStyle: brackets
+Style/EndOfLine:
+  Enabled: false
 Style/CollectionMethods:
   Enabled: true
 Style/MethodCalledOnDoEndBlock:
@@ -88,7 +88,13 @@
   Enabled: false
 RSpec/DescribeClass:
   Enabled: false
+RSpec/ExampleLength:
+  Enabled: false
 RSpec/MessageExpectation:
+  Enabled: false
+RSpec/MultipleExpectations:
+  Enabled: false
+RSpec/NestedGroups:
   Enabled: false
 Style/AsciiComments:
   Enabled: false


--- Gemfile	2017-12-05 11:48:48.668118594 +0000
+++ Gemfile.pdknew	2017-12-05 11:49:17.314145000 +0000
@@ -1,158 +1,127 @@
-#This file is generated by ModuleSync, do not edit.
+source ENV['GEM_SOURCE'] || 'https://rubygems.org'
 
-source ENV['GEM_SOURCE'] || "https://rubygems.org"
+def location_for(place_or_version, fake_version = nil)
+  if place_or_version =~ %r{\A(git[:@][^#]*)#(.*)}
+    [fake_version, { git: Regexp.last_match(1), branch: Regexp.last_match(2), require: false }].compact
+  elsif place_or_version =~ %r{\Afile:\/\/(.*)}
+    ['>= 0', { path: File.expand_path(Regexp.last_match(1)), require: false }]
+  else
+    [place_or_version, { require: false }]
+  end
+end
 
-# Determines what type of gem is requested based on place_or_version.
 def gem_type(place_or_version)
-  if place_or_version =~ /^git:/
+  if place_or_version =~ %r{\Agit[:@]}
     :git
-  elsif place_or_version =~ /^file:/
+  elsif !place_or_version.nil? && place_or_version.start_with?('file:')
     :file
   else
     :gem
   end
 end
 
-# Find a location or specific version for a gem. place_or_version can be a
-# version, which is most often used. It can also be git, which is specified as
-# `git://somewhere.git#branch`. You can also use a file source location, which
-# is specified as `file://some/location/on/disk`.
-def location_for(place_or_version, fake_version = nil)
-  if place_or_version =~ /^(git[:@][^#]*)#(.*)/
-    [fake_version, { :git => $1, :branch => $2, :require => false }].compact
-  elsif place_or_version =~ /^file:\/\/(.*)/
-    ['>= 0', { :path => File.expand_path($1), :require => false }]
-  else
-    [place_or_version, { :require => false }]
-  end
-end
-
-# Used for gem conditionals
-supports_windows = true
 ruby_version_segments = Gem::Version.new(RUBY_VERSION.dup).segments
-minor_version = "#{ruby_version_segments[0]}.#{ruby_version_segments[1]}"
+minor_version = ruby_version_segments[0..1].join('.')
 
-# The following gems are not included by default as they require DevKit on Windows.
-# You should probably include them in a Gemfile.local or a ~/.gemfile
-#gem 'pry' #this may already be included in the gemfile
-#gem 'pry-stack_explorer', :require => false
-#if RUBY_VERSION =~ /^2/
-#  gem 'pry-byebug'
-#else
-#  gem 'pry-debugger'
-#end
-
 group :development do
-  gem "puppet-module-posix-default-r#{minor_version}",    :require => false, :platforms => "ruby"
-  gem "puppet-module-win-default-r#{minor_version}",      :require => false, :platforms => ["mswin", "mingw", "x64_mingw"]
-  gem "puppet-module-posix-dev-r#{minor_version}",        :require => false, :platforms => "ruby"
-  gem "puppet-module-win-dev-r#{minor_version}", '0.0.7', :require => false, :platforms => ["mswin", "mingw", "x64_mingw"]
-  gem "json_pure", '<= 2.0.1',                            :require => false if Gem::Version.new(RUBY_VERSION.dup) < Gem::Version.new('2.0.0')
-  gem "fast_gettext", '1.1.0',                            :require => false if Gem::Version.new(RUBY_VERSION.dup) < Gem::Version.new('2.1.0')
-  gem "fast_gettext",                                     :require => false if Gem::Version.new(RUBY_VERSION.dup) >= Gem::Version.new('2.1.0')
+  gem "fast_gettext", '1.1.0',                         require: false if Gem::Version.new(RUBY_VERSION.dup) < Gem::Version.new('2.1.0')
+  gem "fast_gettext",                                  require: false if Gem::Version.new(RUBY_VERSION.dup) >= Gem::Version.new('2.1.0')
+  gem "json_pure", '<= 2.0.1',                         require: false if Gem::Version.new(RUBY_VERSION.dup) < Gem::Version.new('2.0.0')
+  gem "json", '= 1.8.1',                               require: false if Gem::Version.new(RUBY_VERSION.dup) == Gem::Version.new('2.1.9')
+  gem "puppet-module-posix-default-r#{minor_version}", require: false, platforms: [:ruby]
+  gem "puppet-module-posix-dev-r#{minor_version}",     require: false, platforms: [:ruby]
+  gem "puppet-module-win-default-r#{minor_version}",   require: false, platforms: [:mswin, :mingw, :x64_mingw]
+  gem "puppet-module-win-dev-r#{minor_version}",       require: false, platforms: [:mswin, :mingw, :x64_mingw]
 end
 
-group :system_tests do
-  gem "puppet-module-posix-system-r#{minor_version}",                            :require => false, :platforms => "ruby"
-  gem "puppet-module-win-system-r#{minor_version}",                              :require => false, :platforms => ["mswin", "mingw", "x64_mingw"]
-  gem "beaker", *location_for(ENV['BEAKER_VERSION'] || '>= 3')                  
-  gem "beaker-pe",                                                               :require => false
-  gem "beaker-rspec", *location_for(ENV['BEAKER_RSPEC_VERSION'])                
-  gem "beaker-hostgenerator", *location_for(ENV['BEAKER_HOSTGENERATOR_VERSION'])
-  gem "beaker-abs", *location_for(ENV['BEAKER_ABS_VERSION'] || '~> 0.1')        
-  gem "puppet-blacksmith", '~> 3.4',                                             :require => false
+puppet_version = ENV['PUPPET_GEM_VERSION']
+puppet_type = gem_type(puppet_version)
+facter_version = ENV['FACTER_GEM_VERSION']
+hiera_version = ENV['HIERA_GEM_VERSION']
+
+def puppet_older_than?(version)
+  puppet_version = ENV['PUPPET_GEM_VERSION']
+  !puppet_version.nil? &&
+    Gem::Version.correct?(puppet_version) &&
+    Gem::Requirement.new("< #{version}").satisfied_by?(Gem::Version.new(puppet_version.dup))
 end
 
-gem 'puppet', *location_for(ENV['PUPPET_GEM_VERSION'])
+gems = {}
 
-# Only explicitly specify Facter/Hiera if a version has been specified.
-# Otherwise it can lead to strange bundler behavior. If you are seeing weird
-# gem resolution behavior, try setting `DEBUG_RESOLVER` environment variable
-# to `1` and then run bundle install.
-gem 'facter', *location_for(ENV['FACTER_GEM_VERSION']) if ENV['FACTER_GEM_VERSION']
-gem 'hiera', *location_for(ENV['HIERA_GEM_VERSION']) if ENV['HIERA_GEM_VERSION']
+gems['puppet'] = location_for(puppet_version)
 
-# For Windows dependencies, these could be required based on the version of
-# Puppet you are requiring. Anything greater than v3.5.0 is going to have
-# Windows-specific dependencies dictated by the gem itself. The other scenario
-# is when you are faking out Puppet to use a local file path / git path.
-explicitly_require_windows_gems = false
-puppet_gem_location = gem_type(ENV['PUPPET_GEM_VERSION'])
-# This is not a perfect answer to the version check
-if puppet_gem_location != :gem || (ENV['PUPPET_GEM_VERSION'] && Gem::Version.correct?(ENV['PUPPET_GEM_VERSION']) && Gem::Requirement.new('< 3.5.0').satisfied_by?(Gem::Version.new(ENV['PUPPET_GEM_VERSION'].dup)))
-  if Gem::Platform.local.os == 'mingw32'
-    explicitly_require_windows_gems = true
-  end
-  if puppet_gem_location == :gem
-    # If facterversion hasn't been specified and we are
-    # looking for a Puppet Gem version less than 3.5.0, we
-    # need to ensure we get a good Facter for specs.
-    gem "facter",">= 1.6.11","<= 1.7.5",:require => false unless ENV['FACTER_GEM_VERSION']
-    # If hieraversion hasn't been specified and we are
-    # looking for a Puppet Gem version less than 3.5.0, we
-    # need to ensure we get a good Hiera for specs.
-    gem "hiera",">= 1.0.0","<= 1.3.0",:require => false unless ENV['HIERA_GEM_VERSION']
-  end
+# If facter or hiera versions have been specified via the environment
+# variables, use those versions. If not, and if the puppet version is < 3.5.0,
+# use known good versions of both for puppet < 3.5.0.
+if facter_version
+  gems['facter'] = location_for(facter_version)
+elsif puppet_type == :gem && puppet_older_than?('3.5.0')
+  gems['facter'] = ['>= 1.6.11', '<= 1.7.5', require: false]
 end
 
-if explicitly_require_windows_gems
-  # This also means Puppet Gem less than 3.5.0 - this has been tested back
-  # to 3.0.0. Any further back is likely not supported.
-  if puppet_gem_location == :gem
-    gem "ffi", "1.9.0",                          :require => false
-    gem "win32-eventlog", "0.5.3","<= 0.6.5",    :require => false
-    gem "win32-process", "0.6.5","<= 0.7.5",     :require => false
-    gem "win32-security", "~> 0.1.2","<= 0.2.5", :require => false
-    gem "win32-service", "0.7.2","<= 0.8.8",     :require => false
-    gem "minitar", "0.5.4",                      :require => false
+if hiera_version
+  gems['hiera'] = location_for(ENV['HIERA_GEM_VERSION'])
+elsif puppet_type == :gem && puppet_older_than?('3.5.0')
+  gems['hiera'] = ['>= 1.0.0', '<= 1.3.0', require: false]
+end
+
+if Gem.win_platform? && (puppet_type != :gem || puppet_older_than?('3.5.0'))
+  # For Puppet gems < 3.5.0 (tested as far back as 3.0.0) on Windows
+  if puppet_type == :gem
+    gems['ffi'] =            ['1.9.0',                require: false]
+    gems['minitar'] =        ['0.5.4',                require: false]
+    gems['win32-eventlog'] = ['0.5.3',    '<= 0.6.5', require: false]
+    gems['win32-process'] =  ['0.6.5',    '<= 0.7.5', require: false]
+    gems['win32-security'] = ['~> 0.1.2', '<= 0.2.5', require: false]
+    gems['win32-service'] =  ['0.7.2',    '<= 0.8.8', require: false]
   else
-    gem "ffi", "~> 1.9.0",                       :require => false
-    gem "win32-eventlog", "~> 0.5","<= 0.6.5",   :require => false
-    gem "win32-process", "~> 0.6","<= 0.7.5",    :require => false
-    gem "win32-security", "~> 0.1","<= 0.2.5",   :require => false
-    gem "win32-service", "~> 0.7","<= 0.8.8",    :require => false
-    gem "minitar", "~> 0.5.4",                   :require => false
+    gems['ffi'] =            ['~> 1.9.0',             require: false]
+    gems['minitar'] =        ['~> 0.5.4',             require: false]
+    gems['win32-eventlog'] = ['~> 0.5',   '<= 0.6.5', require: false]
+    gems['win32-process'] =  ['~> 0.6',   '<= 0.7.5', require: false]
+    gems['win32-security'] = ['~> 0.1',   '<= 0.2.5', require: false]
+    gems['win32-service'] =  ['~> 0.7',   '<= 0.8.8', require: false]
   end
 
-  gem "win32-dir", "~> 0.3","<= 0.4.9", :require => false
-  gem "win32console", "1.3.2",          :require => false if RUBY_VERSION =~ /^1\./
+  gems['win32-dir'] = ['~> 0.3', '<= 0.4.9', require: false]
 
-  # sys-admin was removed in Puppet 3.7.0+, and doesn't compile
-  # under Ruby 2.3 - so restrict it to Ruby 1.x
-  gem "sys-admin", "1.5.6",             :require => false if RUBY_VERSION =~ /^1\./
-
-  # Puppet less than 3.7.0 requires these.
-  # Puppet 3.5.0+ will control the actual requirements.
-  # These are listed in formats that work with all versions of
-  # Puppet from 3.0.0 to 3.6.x. After that, these were no longer used.
-  # We do not want to allow newer versions than what came out after
-  # 3.6.x to be used as they constitute some risk in breaking older
-  # functionality. So we set these to exact versions.
-  gem "win32-api", "1.4.8",             :require => false
-  gem "win32-taskscheduler", "0.2.2",   :require => false
-  gem "windows-api", "0.4.3",           :require => false
-  gem "windows-pr",  "1.2.3",           :require => false
-else
-  if Gem::Platform.local.os == 'mingw32'
-    # If we're using a Puppet gem on windows, which handles its own win32-xxx gem dependencies (Pup 3.5.0 and above), set maximum versions
-    # Required due to PUP-6445
-    gem "win32-dir", "<= 0.4.9",        :require => false
-    gem "win32-eventlog", "<= 0.6.5",   :require => false
-    gem "win32-process", "<= 0.7.5",    :require => false
-    gem "win32-security", "<= 0.2.5",   :require => false
-    gem "win32-service", "<= 0.8.8",    :require => false
+  if RUBY_VERSION.start_with?('1.')
+    gems['win32console'] = ['1.3.2', require: false]
+    # sys-admin was removed in Puppet 3.7.0 and doesn't compile under Ruby 2.x
+    gems['sys-admin'] =    ['1.5.6', require: false]
   end
-end
 
-# Evaluate Gemfile.local if it exists
-if File.exists? "#{__FILE__}.local"
-  eval(File.read("#{__FILE__}.local"), binding)
+  # Puppet < 3.7.0 requires these.
+  # Puppet >= 3.5.0 gem includes these as requirements.
+  # The following versions are tested to work with 3.0.0 <= puppet < 3.7.0.
+  gems['win32-api'] =           ['1.4.8', require: false]
+  gems['win32-taskscheduler'] = ['0.2.2', require: false]
+  gems['windows-api'] =         ['0.4.3', require: false]
+  gems['windows-pr'] =          ['1.2.3', require: false]
+elsif Gem.win_platform?
+  # If we're using a Puppet gem on Windows which handles its own win32-xxx gem
+  # dependencies (>= 3.5.0), set the maximum versions (see PUP-6445).
+  gems['win32-dir'] =      ['<= 0.4.9', require: false]
+  gems['win32-eventlog'] = ['<= 0.6.5', require: false]
+  gems['win32-process'] =  ['<= 0.7.5', require: false]
+  gems['win32-security'] = ['<= 0.2.5', require: false]
+  gems['win32-service'] =  ['<= 0.8.8', require: false]
 end
 
-# Evaluate ~/.gemfile if it exists
-if File.exists?(File.join(Dir.home, '.gemfile'))
-  eval(File.read(File.join(Dir.home, '.gemfile')), binding)
+gems.each do |gem_name, gem_params|
+  gem gem_name, *gem_params
 end
 
-# vim:ft=ruby
+# Evaluate Gemfile.local and ~/.gemfile if they exist
+extra_gemfiles = [
+  "#{__FILE__}.local",
+  File.join(Dir.home, '.gemfile'),
+]
+
+extra_gemfiles.each do |gemfile|
+  if File.file?(gemfile) && File.readable?(gemfile)
+    eval(File.read(gemfile), binding)
+  end
+end
+# vim: syntax=ruby


--- .gitignore	2017-12-05 11:48:48.666799984 +0000
+++ .gitignore.pdknew	2017-12-05 11:49:17.315541000 +0000
@@ -1,24 +1,22 @@
-#This file is generated by ModuleSync, do not edit.
-pkg/
-Gemfile.lock
-Gemfile.local
-vendor/
-spec/fixtures/manifests/
-spec/fixtures/modules/
-log/
-junit/
-.vagrant/
-.bundle/
-coverage/
-log/
-.idea/
-.metadata
-*.iml
 .*.sw[op]
+.metadata
 .yardoc
 .yardwarns
-.DS_Store
-tmp/
-vendor/
-doc/
+*.iml
+/.bundle/
+/.idea/
+/.vagrant/
+/coverage/
+/bin/
+/doc/
+/Gemfile.local
+/Gemfile.lock
+/junit/
+/log/
+/log/
+/pkg/
+/spec/fixtures/manifests/
+/spec/fixtures/modules/
+/tmp/
+/vendor/


--- .travis.yml	2017-12-05 11:48:48.667585212 +0000
+++ .travis.yml.pdknew	2017-12-05 11:49:17.316270000 +0000
@@ -1,35 +1,45 @@
-#This file is generated by ModuleSync, do not edit.
 ---
 sudo: false
+dist: trusty
 language: ruby
 cache: bundler
-script: "bundle exec rake release_checks"
-#Inserting below due to the following issue: https://github.com/travis-ci/travis-ci/issues/3531#issuecomment-88311203
 before_install:
+  - bundle -v
+  - rm Gemfile.lock || true
+  - gem update --system
   - gem update bundler
+  - gem --version
+  - bundle -v
+script:
+  - 'bundle exec rake $CHECK'
+bundler_args: --without system_tests
+rvm:
+  - 2.4.1
+  - 2.1.9
+env:
+  - PUPPET_GEM_VERSION="~> 4.0" CHECK=spec
 matrix:
   fast_finish: true
   include:
-  - rvm: 2.3.1
-    dist: trusty
-    env: PUPPET_INSTALL_TYPE=agent BEAKER_debug=true BEAKER_set=docker/ubuntu-14.04
-    script: bundle exec rake beaker
-    services: docker
-    sudo: required
-  - rvm: 2.3.1
-    dist: trusty
-    env: PUPPET_INSTALL_TYPE=agent BEAKER_debug=true BEAKER_set=docker/centos-7
-    script: bundle exec rake beaker
-    services: docker
-    sudo: required
-  - rvm: 2.4.1
-    bundler_args: --without system_tests
-    env: PUPPET_GEM_VERSION="~> 5.0"
-  - rvm: 2.1.9
-    bundler_args: --without system_tests
-    env: PUPPET_GEM_VERSION="~> 4.0"
-  - rvm: 2.1.9
-    script: bundle exec rake rubocop
+    -
+      env: CHECK=rubocop
+    -
+      env: CHECK="syntax lint"
+    -
+      env: CHECK=metadata_lint
+branches:
+  only:
+    - master
+    - /^v\d/
 notifications:
   email: false
+deploy:
+  provider: puppetforge
+  user: puppet
+  password:
+    secure: ""
+  on:
+    tags: true
+    all_branches: true
+    condition: "$DEPLOY_TO_FORGE = yes"


--- Rakefile	2017-12-05 11:48:48.668834860 +0000
+++ Rakefile.pdknew	2017-12-05 11:49:17.317211000 +0000
@@ -1,38 +1,3 @@
 require 'puppetlabs_spec_helper/rake_tasks'
-require 'puppet-lint/tasks/puppet-lint'
-require 'puppet_blacksmith/rake_tasks' if Bundler.rubygems.find_name('puppet-blacksmith').any?
-
-PuppetLint.configuration.fail_on_warnings = true
-PuppetLint.configuration.send('relative')
-
-desc 'Generate pooler nodesets'
-task :gen_nodeset do
-  require 'beaker-hostgenerator'
-  require 'securerandom'
-  require 'fileutils'
-
-  agent_target = ENV['TEST_TARGET']
-  if ! agent_target
-    STDERR.puts 'TEST_TARGET environment variable is not set'
-    STDERR.puts 'setting to default value of "redhat-64default."'
-    agent_target = 'redhat-64default.'
-  end
-
-  master_target = ENV['MASTER_TEST_TARGET']
-  if ! master_target
-    STDERR.puts 'MASTER_TEST_TARGET environment variable is not set'
-    STDERR.puts 'setting to default value of "redhat7-64mdcl"'
-    master_target = 'redhat7-64mdcl'
-  end
-
-  targets = "#{master_target}-#{agent_target}"
-  cli = BeakerHostGenerator::CLI.new([targets])
-  nodeset_dir = "tmp/nodesets"
-  nodeset = "#{nodeset_dir}/#{targets}-#{SecureRandom.uuid}.yaml"
-  FileUtils.mkdir_p(nodeset_dir)
-  File.open(nodeset, 'w') do |fh|
-    fh.print(cli.execute)
-  end
-  puts nodeset
-end
+require 'puppet-syntax/tasks/puppet-syntax'